warning: unused import: `smithay::backend::renderer::ImportEgl`
   --> anodium-backend/src/drm/mod.rs:178:13
    |
178 |         use smithay::backend::renderer::ImportEgl;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `indexmap::IndexMap`
 --> anodium-backend/src/udev/drm_device.rs:9:5
  |
9 | use indexmap::IndexMap;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `HashMap`
 --> anodium-backend/src/udev/gbm_device.rs:1:24
  |
1 | use std::collections::{HashMap, HashSet};
  |                        ^^^^^^^

warning: unused imports: `GbmBufferFlags`, `ModeTypeFlags`, `renderer::gles2::Gles2Renderer`, `self`
  --> anodium-backend/src/udev/gbm_device.rs:5:26
   |
5  |         allocator::gbm::{self, GbmAllocator, GbmBufferFlags},
   |                          ^^^^                ^^^^^^^^^^^^^^
...
8  |         renderer::gles2::Gles2Renderer,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
9  |     },
10 |     reexports::drm::control::{self, connector, crtc, ModeTypeFlags},
   |                                                      ^^^^^^^^^^^^^

warning: unused variable: `renderer`
   --> anodium-backend/src/drm/mod.rs:183:17
    |
183 |         let mut renderer = gpu_manager.single_renderer(&state.primary_gpu).unwrap();
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_renderer`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> anodium-backend/src/drm/mod.rs:183:13
    |
183 |         let mut renderer = gpu_manager.single_renderer(&state.primary_gpu).unwrap();
    |             ----^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: field `pointer_images` is never read
  --> anodium-backend/src/drm/mod.rs:64:5
   |
60 | pub struct DrmBackendState {
   |            --------------- field in this struct
...
64 |     pointer_images: Vec<(xcursor::parser::Image, Gles2Texture)>,
   |     ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `inner_mut` is never used
  --> anodium-backend/src/drm/device.rs:57:12
   |
57 |     pub fn inner_mut(&self) -> RefMut<drm::DrmDevice> {
   |            ^^^^^^^^^

warning: `anodium-backend` (lib) generated 8 warnings
   Compiling anodium-backend v0.1.0 (/home/poly/dev/Anodium/anodium-backend)
warning: unused variable: `age`
  --> anodium-backend/examples/simple.rs:53:34
   |
53 |                     let (dmabuf, age) = surface.next_buffer().unwrap();
   |                                  ^^^ help: if this is intentional, prefix it with an underscore: `_age`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: field `gbm_device` is never read
  --> anodium-backend/examples/simple.rs:25:5
   |
23 | struct Device {
   |        ------ field in this struct
24 |     drm_device: drm_device::DrmDevice,
25 |     gbm_device: gbm::GbmDevice<DrmDeviceFd>,
   |     ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `anodium-backend` (example "simple") generated 2 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.91s
     Running `/home/poly/dev/Anodium/target/debug/examples/simple`
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: NoSupportedPlaneFormat', anodium-backend/src/udev/gbm_device.rs:24:62
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
